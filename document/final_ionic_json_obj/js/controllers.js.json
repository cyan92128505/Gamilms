{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "angular"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "module"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "BookStoreApp.controllers",
                                "raw": "'BookStoreApp.controllers'"
                              },
                              {
                                "type": "ArrayExpression",
                                "elements": []
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "controller"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "AppCtrl",
                            "raw": "'AppCtrl'"
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": "$rootScope",
                                "raw": "'$rootScope'"
                              },
                              {
                                "type": "Literal",
                                "value": "$ionicModal",
                                "raw": "'$ionicModal'"
                              },
                              {
                                "type": "Literal",
                                "value": "AuthFactory",
                                "raw": "'AuthFactory'"
                              },
                              {
                                "type": "Literal",
                                "value": "$location",
                                "raw": "'$location'"
                              },
                              {
                                "type": "Literal",
                                "value": "UserFactory",
                                "raw": "'UserFactory'"
                              },
                              {
                                "type": "Literal",
                                "value": "$scope",
                                "raw": "'$scope'"
                              },
                              {
                                "type": "Literal",
                                "value": "Loader",
                                "raw": "'Loader'"
                              },
                              {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "$rootScope"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "$ionicModal"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "AuthFactory"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "$location"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "UserFactory"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "$scope"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "Loader"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "$rootScope"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "$on"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "showLoginModal",
                                            "raw": "'showLoginModal'"
                                          },
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "$event"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "scope"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "cancelCallback"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "callback"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$scope"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "user"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "ObjectExpression",
                                                      "properties": [
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "email"
                                                          },
                                                          "computed": false,
                                                          "value": {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "''"
                                                          },
                                                          "kind": "init",
                                                          "method": false,
                                                          "shorthand": false
                                                        },
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "password"
                                                          },
                                                          "computed": false,
                                                          "value": {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "''"
                                                          },
                                                          "kind": "init",
                                                          "method": false,
                                                          "shorthand": false
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "$scope"
                                                    },
                                                    "right": {
                                                      "type": "LogicalExpression",
                                                      "operator": "||",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "scope"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "$scope"
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$scope"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "viewLogin"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": true,
                                                      "raw": "true"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$ionicModal"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "fromTemplateUrl"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "templates/login.html",
                                                            "raw": "'templates/login.html'"
                                                          },
                                                          {
                                                            "type": "ObjectExpression",
                                                            "properties": [
                                                              {
                                                                "type": "Property",
                                                                "key": {
                                                                  "type": "Identifier",
                                                                  "name": "scope"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                  "type": "Identifier",
                                                                  "name": "$scope"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "then"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "modal"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$scope"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "modal"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "modal"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "$scope"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "modal"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "show"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$scope"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "switchTab"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "tab"
                                                                    }
                                                                  ],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "===",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "tab"
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "login",
                                                                            "raw": "'login'"
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "$scope"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "viewLogin"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": true,
                                                                                  "raw": "true"
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "alternate": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "$scope"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "viewLogin"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": false,
                                                                                  "raw": "false"
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$scope"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "hide"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$scope"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "modal"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "hide"
                                                                            }
                                                                          },
                                                                          "arguments": []
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "===",
                                                                          "left": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "typeof",
                                                                            "argument": {
                                                                              "type": "Identifier",
                                                                              "name": "cancelCallback"
                                                                            },
                                                                            "prefix": true
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "function",
                                                                            "raw": "'function'"
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "cancelCallback"
                                                                                },
                                                                                "arguments": []
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "alternate": null
                                                                      }
                                                                    ]
                                                                  },
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$scope"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "login"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "Loader"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "showLoading"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": "Authenticating...",
                                                                              "raw": "'Authenticating...'"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "UserFactory"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "login"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$scope"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "user"
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "success"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "FunctionExpression",
                                                                                  "id": null,
                                                                                  "params": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "data"
                                                                                    }
                                                                                  ],
                                                                                  "defaults": [],
                                                                                  "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "AssignmentExpression",
                                                                                          "operator": "=",
                                                                                          "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "data"
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "data"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "data"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "AuthFactory"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "setUser"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "data"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "user"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "AuthFactory"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "setToken"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "ObjectExpression",
                                                                                              "properties": [
                                                                                                {
                                                                                                  "type": "Property",
                                                                                                  "key": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "token"
                                                                                                  },
                                                                                                  "computed": false,
                                                                                                  "value": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "data"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "token"
                                                                                                    }
                                                                                                  },
                                                                                                  "kind": "init",
                                                                                                  "method": false,
                                                                                                  "shorthand": false
                                                                                                },
                                                                                                {
                                                                                                  "type": "Property",
                                                                                                  "key": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "expires"
                                                                                                  },
                                                                                                  "computed": false,
                                                                                                  "value": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "data"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "expires"
                                                                                                    }
                                                                                                  },
                                                                                                  "kind": "init",
                                                                                                  "method": false,
                                                                                                  "shorthand": false
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "AssignmentExpression",
                                                                                          "operator": "=",
                                                                                          "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "$rootScope"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "isAuthenticated"
                                                                                            }
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Literal",
                                                                                            "value": true,
                                                                                            "raw": "true"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "$scope"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "modal"
                                                                                              }
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "hide"
                                                                                            }
                                                                                          },
                                                                                          "arguments": []
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "Loader"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "hideLoading"
                                                                                            }
                                                                                          },
                                                                                          "arguments": []
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "IfStatement",
                                                                                        "test": {
                                                                                          "type": "BinaryExpression",
                                                                                          "operator": "===",
                                                                                          "left": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "typeof",
                                                                                            "argument": {
                                                                                              "type": "Identifier",
                                                                                              "name": "callback"
                                                                                            },
                                                                                            "prefix": true
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "function",
                                                                                            "raw": "'function'"
                                                                                          }
                                                                                        },
                                                                                        "consequent": {
                                                                                          "type": "BlockStatement",
                                                                                          "body": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "callback"
                                                                                                },
                                                                                                "arguments": []
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "alternate": null
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "generator": false,
                                                                                  "expression": false
                                                                                }
                                                                              ]
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "error"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "err"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "statusCode"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "Loader"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "hideLoading"
                                                                                        }
                                                                                      },
                                                                                      "arguments": []
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "Loader"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "toggleLoadingWithMessage"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "err"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "message"
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "generator": false,
                                                                              "expression": false
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$scope"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "register"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "Loader"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "showLoading"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": "Registering...",
                                                                              "raw": "'Registering...'"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "UserFactory"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "register"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$scope"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "user"
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "success"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "FunctionExpression",
                                                                                  "id": null,
                                                                                  "params": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "data"
                                                                                    }
                                                                                  ],
                                                                                  "defaults": [],
                                                                                  "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "AssignmentExpression",
                                                                                          "operator": "=",
                                                                                          "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "data"
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "data"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "data"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "AuthFactory"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "setUser"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "data"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "user"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "AuthFactory"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "setToken"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "ObjectExpression",
                                                                                              "properties": [
                                                                                                {
                                                                                                  "type": "Property",
                                                                                                  "key": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "token"
                                                                                                  },
                                                                                                  "computed": false,
                                                                                                  "value": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "data"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "token"
                                                                                                    }
                                                                                                  },
                                                                                                  "kind": "init",
                                                                                                  "method": false,
                                                                                                  "shorthand": false
                                                                                                },
                                                                                                {
                                                                                                  "type": "Property",
                                                                                                  "key": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "expires"
                                                                                                  },
                                                                                                  "computed": false,
                                                                                                  "value": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "data"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "expires"
                                                                                                    }
                                                                                                  },
                                                                                                  "kind": "init",
                                                                                                  "method": false,
                                                                                                  "shorthand": false
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "AssignmentExpression",
                                                                                          "operator": "=",
                                                                                          "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "$rootScope"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "isAuthenticated"
                                                                                            }
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Literal",
                                                                                            "value": true,
                                                                                            "raw": "true"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "Loader"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "hideLoading"
                                                                                            }
                                                                                          },
                                                                                          "arguments": []
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "$scope"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "modal"
                                                                                              }
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "hide"
                                                                                            }
                                                                                          },
                                                                                          "arguments": []
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "IfStatement",
                                                                                        "test": {
                                                                                          "type": "BinaryExpression",
                                                                                          "operator": "===",
                                                                                          "left": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "typeof",
                                                                                            "argument": {
                                                                                              "type": "Identifier",
                                                                                              "name": "callback"
                                                                                            },
                                                                                            "prefix": true
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "function",
                                                                                            "raw": "'function'"
                                                                                          }
                                                                                        },
                                                                                        "consequent": {
                                                                                          "type": "BlockStatement",
                                                                                          "body": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "callback"
                                                                                                },
                                                                                                "arguments": []
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "alternate": null
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "generator": false,
                                                                                  "expression": false
                                                                                }
                                                                              ]
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "error"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "err"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "statusCode"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "Loader"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "hideLoading"
                                                                                        }
                                                                                      },
                                                                                      "arguments": []
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "Loader"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "toggleLoadingWithMessage"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "err"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "message"
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "generator": false,
                                                                              "expression": false
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "$rootScope"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "loginFromMenu"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "$rootScope"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "$broadcast"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "showLoginModal",
                                                      "raw": "'showLoginModal'"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "$scope"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": null,
                                                      "raw": "null"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": null,
                                                      "raw": "null"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "$rootScope"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "logout"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "UserFactory"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "logout"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "$rootScope"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "isAuthenticated"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "$location"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "path"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "/app/browse",
                                                      "raw": "'/app/browse'"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "Loader"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "toggleLoadingWithMessage"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "Successfully Logged Out!",
                                                      "raw": "'Successfully Logged Out!'"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 2000,
                                                      "raw": "2000"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    }
                                  ]
                                },
                                "generator": false,
                                "expression": false
                              }
                            ]
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "controller"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "BrowseCtrl",
                        "raw": "'BrowseCtrl'"
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "$scope",
                            "raw": "'$scope'"
                          },
                          {
                            "type": "Literal",
                            "value": "BooksFactory",
                            "raw": "'BooksFactory'"
                          },
                          {
                            "type": "Literal",
                            "value": "LSFactory",
                            "raw": "'LSFactory'"
                          },
                          {
                            "type": "Literal",
                            "value": "Loader",
                            "raw": "'Loader'"
                          },
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "$scope"
                              },
                              {
                                "type": "Identifier",
                                "name": "BooksFactory"
                              },
                              {
                                "type": "Identifier",
                                "name": "LSFactory"
                              },
                              {
                                "type": "Identifier",
                                "name": "Loader"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Loader"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "showLoading"
                                      }
                                    },
                                    "arguments": []
                                  }
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "page"
                                      },
                                      "init": {
                                        "type": "Literal",
                                        "value": 1,
                                        "raw": "1"
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "$scope"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "books"
                                      }
                                    },
                                    "right": {
                                      "type": "ArrayExpression",
                                      "elements": []
                                    }
                                  }
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "books"
                                      },
                                      "init": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "LSFactory"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "getAll"
                                          }
                                        },
                                        "arguments": []
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": ">",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "books"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "length"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 0,
                                      "raw": "0"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "$scope"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "books"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "books"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Loader"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "hideLoading"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "BooksFactory"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "get"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "page"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "success"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "data"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "processBooks"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "data"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "data"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "books"
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "$scope"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "books"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "data"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "data"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "books"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "$scope"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "$broadcast"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "scroll.infiniteScrollComplete",
                                                              "raw": "'scroll.infiniteScrollComplete'"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Loader"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "hideLoading"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "error"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "err"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "statusCode"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Loader"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "hideLoading"
                                                        }
                                                      },
                                                      "arguments": []
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Loader"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "toggleLoadingWithMessage"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "err"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "message"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "FunctionDeclaration",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "processBooks"
                                  },
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "books"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "LSFactory"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "clear"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      },
                                      {
                                        "type": "ForStatement",
                                        "init": {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "init": {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0"
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "<",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "i"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "books"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          }
                                        },
                                        "update": {
                                          "type": "UpdateExpression",
                                          "operator": "++",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "i"
                                          },
                                          "prefix": false
                                        },
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "LSFactory"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "set"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "books"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "_id"
                                                    }
                                                  },
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "books"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "EmptyStatement"
                                      }
                                    ]
                                  },
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            },
                            "generator": false,
                            "expression": false
                          }
                        ]
                      }
                    ]
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "controller"
                  }
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "BookCtrl",
                    "raw": "'BookCtrl'"
                  },
                  {
                    "type": "ArrayExpression",
                    "elements": [
                      {
                        "type": "Literal",
                        "value": "$scope",
                        "raw": "'$scope'"
                      },
                      {
                        "type": "Literal",
                        "value": "$state",
                        "raw": "'$state'"
                      },
                      {
                        "type": "Literal",
                        "value": "LSFactory",
                        "raw": "'LSFactory'"
                      },
                      {
                        "type": "Literal",
                        "value": "AuthFactory",
                        "raw": "'AuthFactory'"
                      },
                      {
                        "type": "Literal",
                        "value": "$rootScope",
                        "raw": "'$rootScope'"
                      },
                      {
                        "type": "Literal",
                        "value": "UserFactory",
                        "raw": "'UserFactory'"
                      },
                      {
                        "type": "Literal",
                        "value": "Loader",
                        "raw": "'Loader'"
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "$scope"
                          },
                          {
                            "type": "Identifier",
                            "name": "$state"
                          },
                          {
                            "type": "Identifier",
                            "name": "LSFactory"
                          },
                          {
                            "type": "Identifier",
                            "name": "AuthFactory"
                          },
                          {
                            "type": "Identifier",
                            "name": "$rootScope"
                          },
                          {
                            "type": "Identifier",
                            "name": "UserFactory"
                          },
                          {
                            "type": "Identifier",
                            "name": "Loader"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "bookId"
                                  },
                                  "init": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "$state"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "params"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "bookId"
                                    }
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "$scope"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "book"
                                  }
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "LSFactory"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "get"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "bookId"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "$scope"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$on"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "addToCart",
                                    "raw": "'addToCart'"
                                  },
                                  {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "Loader"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "showLoading"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "Adding to Cart..",
                                                "raw": "'Adding to Cart..'"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "UserFactory"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "addToCart"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "id"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                              "type": "Identifier",
                                                              "name": "bookId"
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "qty"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                              "type": "Literal",
                                                              "value": 1,
                                                              "raw": "1"
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "success"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "data"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "Loader"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "hideLoading"
                                                              }
                                                            },
                                                            "arguments": []
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "Loader"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "toggleLoadingWithMessage"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "Literal",
                                                                    "value": "Successfully added ",
                                                                    "raw": "'Successfully added '"
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$scope"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "book"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "title"
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": " to your cart",
                                                                  "raw": "' to your cart'"
                                                                }
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": 2000,
                                                                "raw": "2000"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "generator": false,
                                                    "expression": false
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "error"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "err"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "statusCode"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "Loader"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "hideLoading"
                                                          }
                                                        },
                                                        "arguments": []
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "Loader"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "toggleLoadingWithMessage"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "err"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "message"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "generator": false,
                                    "expression": false
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "$scope"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "addToCart"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "UnaryExpression",
                                          "operator": "!",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "AuthFactory"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "isLoggedIn"
                                              }
                                            },
                                            "arguments": []
                                          },
                                          "prefix": true
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "$rootScope"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$broadcast"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "showLoginModal",
                                                    "raw": "'showLoginModal'"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "$scope"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                  },
                                                  {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "$scope"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "$broadcast"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "addToCart",
                                                                "raw": "'addToCart'"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "generator": false,
                                                    "expression": false
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": null
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "$scope"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "$broadcast"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "addToCart",
                                              "raw": "'addToCart'"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            }
                          ]
                        },
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                ]
              },
              "property": {
                "type": "Identifier",
                "name": "controller"
              }
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "CartCtrl",
                "raw": "'CartCtrl'"
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "$scope",
                    "raw": "'$scope'"
                  },
                  {
                    "type": "Literal",
                    "value": "AuthFactory",
                    "raw": "'AuthFactory'"
                  },
                  {
                    "type": "Literal",
                    "value": "$rootScope",
                    "raw": "'$rootScope'"
                  },
                  {
                    "type": "Literal",
                    "value": "$location",
                    "raw": "'$location'"
                  },
                  {
                    "type": "Literal",
                    "value": "$timeout",
                    "raw": "'$timeout'"
                  },
                  {
                    "type": "Literal",
                    "value": "UserFactory",
                    "raw": "'UserFactory'"
                  },
                  {
                    "type": "Literal",
                    "value": "Loader",
                    "raw": "'Loader'"
                  },
                  {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "$scope"
                      },
                      {
                        "type": "Identifier",
                        "name": "AuthFactory"
                      },
                      {
                        "type": "Identifier",
                        "name": "$rootScope"
                      },
                      {
                        "type": "Identifier",
                        "name": "$location"
                      },
                      {
                        "type": "Identifier",
                        "name": "$timeout"
                      },
                      {
                        "type": "Identifier",
                        "name": "UserFactory"
                      },
                      {
                        "type": "Identifier",
                        "name": "Loader"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$scope"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "$on"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "getCart",
                                "raw": "'getCart'"
                              },
                              {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Loader"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "showLoading"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "Fetching Your Cart..",
                                            "raw": "'Fetching Your Cart..'"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "UserFactory"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "getCartItems"
                                                  }
                                                },
                                                "arguments": []
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "success"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "data"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$scope"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "books"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "data"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "data"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "Loader"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "hideLoading"
                                                          }
                                                        },
                                                        "arguments": []
                                                      }
                                                    }
                                                  ]
                                                },
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "error"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "err"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "statusCode"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Loader"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "hideLoading"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Loader"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "toggleLoadingWithMessage"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "err"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "message"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "generator": false,
                                "expression": false
                              }
                            ]
                          }
                        },
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "AuthFactory"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "isLoggedIn"
                                }
                              },
                              "arguments": []
                            },
                            "prefix": true
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "$rootScope"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "$broadcast"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "showLoginModal",
                                      "raw": "'showLoginModal'"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "$scope"
                                    },
                                    {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "$timeout"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "$location"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "path"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "/app/browse",
                                                              "raw": "'/app/browse'"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 200,
                                                  "raw": "200"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "generator": false,
                                      "expression": false
                                    },
                                    {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "$scope"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "$broadcast"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "getCart",
                                                  "raw": "'getCart'"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "generator": false,
                                      "expression": false
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "ReturnStatement",
                                "argument": null
                              }
                            ]
                          },
                          "alternate": null
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$scope"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "$broadcast"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "getCart",
                                "raw": "'getCart'"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$scope"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "checkout"
                              }
                            },
                            "right": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "_cart"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "$scope"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "books"
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "cart"
                                        },
                                        "init": {
                                          "type": "ArrayExpression",
                                          "elements": []
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ForStatement",
                                    "init": {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "i"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0"
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "<",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "_cart"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      }
                                    },
                                    "update": {
                                      "type": "UpdateExpression",
                                      "operator": "++",
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "i"
                                      },
                                      "prefix": false
                                    },
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "cart"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "push"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "id"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "_cart"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "i"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_id"
                                                      }
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "qty"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                      "type": "Literal",
                                                      "value": 1,
                                                      "raw": "1"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "EmptyStatement"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "Loader"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "showLoading"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "Checking out..",
                                          "raw": "'Checking out..'"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "UserFactory"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "addPurchase"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "cart"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "success"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "data"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Loader"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "hideLoading"
                                                        }
                                                      },
                                                      "arguments": []
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Loader"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "toggleLoadingWithMessage"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "Successfully checked out",
                                                          "raw": "'Successfully checked out'"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 2000,
                                                          "raw": "2000"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "$scope"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "books"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "error"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [
                                            {
                                              "type": "Identifier",
                                              "name": "err"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "statusCode"
                                            }
                                          ],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "Loader"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "hideLoading"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "Loader"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "toggleLoadingWithMessage"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "err"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "message"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "generator": false,
                                          "expression": false
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "generator": false,
                              "expression": false
                            }
                          }
                        }
                      ]
                    },
                    "generator": false,
                    "expression": false
                  }
                ]
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "name": "controller"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "PurchasesCtrl",
            "raw": "'PurchasesCtrl'"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "$scope",
                "raw": "'$scope'"
              },
              {
                "type": "Literal",
                "value": "$rootScope",
                "raw": "'$rootScope'"
              },
              {
                "type": "Literal",
                "value": "AuthFactory",
                "raw": "'AuthFactory'"
              },
              {
                "type": "Literal",
                "value": "UserFactory",
                "raw": "'UserFactory'"
              },
              {
                "type": "Literal",
                "value": "$timeout",
                "raw": "'$timeout'"
              },
              {
                "type": "Literal",
                "value": "Loader",
                "raw": "'Loader'"
              },
              {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "$scope"
                  },
                  {
                    "type": "Identifier",
                    "name": "$rootScope"
                  },
                  {
                    "type": "Identifier",
                    "name": "AuthFactory"
                  },
                  {
                    "type": "Identifier",
                    "name": "UserFactory"
                  },
                  {
                    "type": "Identifier",
                    "name": "$timeout"
                  },
                  {
                    "type": "Identifier",
                    "name": "Loader"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "$scope"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "groups"
                          }
                        },
                        "right": {
                          "type": "ArrayExpression",
                          "elements": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "$scope"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toggleGroup"
                          }
                        },
                        "right": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "group"
                            }
                          ],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "$scope"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "isGroupShown"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "group"
                                    }
                                  ]
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "$scope"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "shownGroup"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": null,
                                          "raw": "null"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "alternate": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "$scope"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "shownGroup"
                                          }
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "group"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "generator": false,
                          "expression": false
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "$scope"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isGroupShown"
                          }
                        },
                        "right": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "group"
                            }
                          ],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "$scope"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "shownGroup"
                                    }
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "group"
                                  }
                                }
                              }
                            ]
                          },
                          "generator": false,
                          "expression": false
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "$scope"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "$on"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "getPurchases",
                            "raw": "'getPurchases'"
                          },
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Loader"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "showLoading"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "Fetching Your Purchases",
                                        "raw": "'Fetching Your Purchases'"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "UserFactory"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "getPurchases"
                                              }
                                            },
                                            "arguments": []
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "success"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "data"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "purchases"
                                                      },
                                                      "init": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "data"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "data"
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$scope"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "purchases"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "ArrayExpression",
                                                      "elements": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ForStatement",
                                                  "init": {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "i"
                                                        },
                                                        "init": {
                                                          "type": "Literal",
                                                          "value": 0,
                                                          "raw": "0"
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "purchases"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    }
                                                  },
                                                  "update": {
                                                    "type": "UpdateExpression",
                                                    "operator": "++",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    },
                                                    "prefix": false
                                                  },
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "key"
                                                            },
                                                            "init": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "Object"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "keys"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "purchases"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "$scope"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "purchases"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "push"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "key"
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "$scope"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "groups"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "ObjectExpression",
                                                            "properties": [
                                                              {
                                                                "type": "Property",
                                                                "key": {
                                                                  "type": "Identifier",
                                                                  "name": "name"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                  },
                                                                  "property": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                  }
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                              },
                                                              {
                                                                "type": "Property",
                                                                "key": {
                                                                  "type": "Identifier",
                                                                  "name": "items"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "purchases"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "i"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                  }
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "sum"
                                                            },
                                                            "init": {
                                                              "type": "Literal",
                                                              "value": 0,
                                                              "raw": "0"
                                                            }
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "ForStatement",
                                                        "init": {
                                                          "type": "VariableDeclaration",
                                                          "declarations": [
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "j"
                                                              },
                                                              "init": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                              }
                                                            }
                                                          ],
                                                          "kind": "var"
                                                        },
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "<",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "j"
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "purchases"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "i"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "key"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          }
                                                        },
                                                        "update": {
                                                          "type": "UpdateExpression",
                                                          "operator": "++",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "j"
                                                          },
                                                          "prefix": false
                                                        },
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "+=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "sum"
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "parseInt"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "purchases"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "i"
                                                                            }
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "key"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "j"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "price"
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "EmptyStatement"
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$scope"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "groups"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "total"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "sum"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "EmptyStatement"
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Loader"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "hideLoading"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                }
                                              ]
                                            },
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "error"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "err"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "statusCode"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Loader"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "hideLoading"
                                                  }
                                                },
                                                "arguments": []
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Loader"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "toggleLoadingWithMessage"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "err"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "message"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "generator": false,
                                        "expression": false
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "generator": false,
                            "expression": false
                          }
                        ]
                      }
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "AuthFactory"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isLoggedIn"
                            }
                          },
                          "arguments": []
                        },
                        "prefix": true
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$rootScope"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "$broadcast"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "showLoginModal",
                                  "raw": "'showLoginModal'"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "$scope"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "$timeout"
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "$location"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "path"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "/app/browse",
                                                          "raw": "'/app/browse'"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "generator": false,
                                              "expression": false
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 200,
                                              "raw": "200"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "generator": false,
                                  "expression": false
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "$scope"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "$broadcast"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "getPurchases",
                                              "raw": "'getPurchases'"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": null
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "$scope"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "$broadcast"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "getPurchases",
                            "raw": "'getPurchases'"
                          }
                        ]
                      }
                    }
                  ]
                },
                "generator": false,
                "expression": false
              }
            ]
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}
