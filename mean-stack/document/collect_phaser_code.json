[
  [
    "var game = new Phaser.Game(480, 320, Phaser.AUTO, '', {",
    "    preload: preload,",
    "    create: create,",
    "    update: update",
    "});",
    "function preload() {}",
    "function create() {}",
    "function update() {}"
  ],
  [
    "function preload() {",
    "    game.load.image('sky', 'lib/assets/sky.png');",
    "    game.load.image('ground', 'lib/assets/platform.png');",
    "    game.load.image('star', 'lib/assets/star.png');",
    "    game.load.spritesheet('dude', 'lib/assets/dude.png', 32, 48);",
    "}"
  ],
  [
    "function create() {",
    "    game.add.sprite(0, 0, 'sky');",
    "}"
  ],
  [
    "var platforms;",
    "    game.physics.startSystem(Phaser.Physics.ARCADE);",
    "    game.add.sprite(0, 0, 'sky');",
    "    platforms = game.add.group();",
    "    platforms.enableBody = true;",
    "    var ground = platforms.create(0, game.world.height - 64, 'ground');",
    "    ground.scale.setTo(2, 2);",
    "    ground.body.immovable = true;",
    "    var ledge = platforms.create(0, 100, 'ground');",
    "    ledge.body.immovable = true;",
    "    ledge = platforms.create(150, 250, 'ground');",
    "    ledge.body.immovable = true;",
    "}"
  ],
  [
    "var player;",
    "var platforms;",
    "    player = game.add.sprite(32, game.world.height - 150, 'dude');",
    "    game.physics.arcade.enable(player);",
    "    player.body.bounce.y = 0.2;",
    "    player.body.gravity.y = 300;",
    "    player.body.collideWorldBounds = true;",
    "    player.animations.add('left', [0, 1, 2, 3], 10, true);",
    "    player.animations.add('right', [5, 6, 7, 8], 10, true);",
    "}"
  ],
  [
    "function update() {",
    "    game.physics.arcade.collide(player, platforms);",
    "}"
  ],
  [
    "var cursors;",
    "    cursors = game.input.keyboard.createCursorKeys();",
    "}",
    "    player.body.velocity.x = 0;",
    "    if (cursors.left.isDown) {",
    "        player.body.velocity.x = -150;",
    "        player.animations.play('left');",
    "    } else if (cursors.right.isDown) {",
    "        player.body.velocity.x = 150;",
    "        player.animations.play('right');",
    "    } else {",
    "        player.animations.stop();",
    "        player.frame = 4;",
    "    }",
    "    if (cursors.up.isDown && player.body.touching.down) {",
    "        player.body.velocity.y = -350;",
    "    }",
    "}"
  ],
  [
    "var stars;",
    "    stars = game.add.group();",
    "    stars.enableBody = true;",
    "    for (var i = 0; i < 12; i++) {",
    "        var star = stars.create(i * 32, 0, 'star');",
    "        star.body.gravity.y = 300;",
    "        star.body.bounce.y = 0.7 + Math.random() * 0.2;",
    "    }",
    "    cursors = game.input.keyboard.createCursorKeys();",
    "    game.physics.arcade.collide(stars, platforms);",
    "    game.physics.arcade.overlap(player, stars, collectStar, null, this);",
    "    player.body.velocity.x = 0;",
    "function collectStar(player, star) {",
    "    star.kill();",
    "}"
  ],
  [
    "var score = 0;",
    "var scoreText;",
    "var gameover = false;",
    "    scoreText = game.add.text(16, 16, 'score: 0', {",
    "        fontSize: '32px',",
    "        fill: '#000'",
    "    });",
    "    cursors = game.input.keyboard.createCursorKeys();",
    "    if (!gameover) {",
    "        if (cursors.left.isDown) {",
    "            player.body.velocity.x = -150;",
    "            player.animations.play('left');",
    "        } else if (cursors.right.isDown) {",
    "            player.body.velocity.x = 150;",
    "            player.animations.play('right');",
    "        } else {",
    "            player.animations.stop();",
    "            player.frame = 4;",
    "        }",
    "        if (cursors.up.isDown && player.body.touching.down) {",
    "            player.body.velocity.y = -350;",
    "        }",
    "    }",
    "    score += 10;",
    "    scoreText.text = 'Score: ' + score;",
    "    if (score === 120) {",
    "        scoreText.text = 'Game Over!!';",
    "        gameover = true;",
    "        player.animations.stop();",
    "        player.frame = 4;",
    "    }",
    "}"
  ]
]
